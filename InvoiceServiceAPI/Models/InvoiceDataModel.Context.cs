//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InvoiceServiceAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InvoiceDBEntities : DbContext
    {
        public InvoiceDBEntities()
            : base("name=InvoiceDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyInfo> CompanyInfoes { get; set; }
        public virtual DbSet<InvoiceInfo> InvoiceInfoes { get; set; }
    
        public virtual int CreateInvoice(Nullable<int> companyID, string customerID, string shippingAddress, ObjectParameter newid)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(string));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("shippingAddress", shippingAddress) :
                new ObjectParameter("shippingAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateInvoice", companyIDParameter, customerIDParameter, shippingAddressParameter, newid);
        }
    
        public virtual int CreateCompany(string companyName, string companyAddress, ObjectParameter newid)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("companyAddress", companyAddress) :
                new ObjectParameter("companyAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCompany", companyNameParameter, companyAddressParameter, newid);
        }
    }
}
